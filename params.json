{"name":"Earlgrey","tagline":"iOS UI Automation Test Framework","body":"# EarlGrey\r\n\r\nEarlGrey is a native iOS UI automation test framework that enables you to write\r\nclear, concise tests.\r\n\r\nWith the EarlGrey framework, you have access to enhanced synchronization\r\nfeatures. EarlGrey automatically synchronizes with the UI, network requests,\r\nand various queues, but still allows you to manually implement customized\r\ntimings, if needed.\r\n\r\nEarlGrey’s synchronization features help ensure that the UI is in a steady\r\nstate before actions are performed. This greatly increases test stability and\r\nmakes tests highly repeatable.\r\n\r\nEarlGrey works in conjunction with the XCTest framework and integrates with\r\nXcode’s Test Navigator so you can run tests directly from Xcode or the command\r\nline (using xcodebuild).\r\n\r\n## Getting Started\r\n\r\nThe EarlGrey documentation for users is located in the\r\n[EarlGrey/docs](https://github.com/google/EarlGrey/tree/master/docs) folder.\r\nTo get started, review the EarlGrey features, check for backward compatibility,\r\nand then install/run EarlGrey with your test target. Once everything is\r\nconfigured, take a look at the EarlGrey API and start writing your own tests.\r\n\r\n  * [Features](https://github.com/google/EarlGrey/tree/master/docs/features.md)\r\n  * [Backward Compatibility](https://github.com/google/EarlGrey/tree/master/docs/backward-compatibility.md)\r\n  * [Install and Run](https://github.com/google/EarlGrey/tree/master/docs/install-and-run.md)\r\n  * [API](https://github.com/google/EarlGrey/tree/master/docs/api.md)\r\n\r\n## Getting Help\r\n\r\nIf you need help, several resources are available. First check the FAQ. If the\r\nanswers you need are not there, read through the Known Issues. If you still have\r\nquestions, contact us using our [Google group](https://groups.google.com/forum/#!forum/earlgrey-discuss).\r\n\r\n  * [FAQ](https://github.com/google/EarlGrey/tree/master/docs/faq.md)\r\n  * [Known Issues](https://github.com/google/EarlGrey/tree/master/docs/known-issues.md)\r\n\r\n## Analytics\r\n\r\nTo prioritize and improve EarlGrey, the framework collects usage data and\r\nuploads it to Google Analytics. More specifically, the framework collects the\r\nApp’s *Bundle ID* (as a MD5 hash) and the total number of test cases. This\r\ninformation allows us to measure the volume of usage. If they wish, users can\r\nchoose to opt out by disabling the Analytics config setting in their test’s\r\nsetUp method:\r\n\r\n```\r\n// Disable analytics.\r\n[[GREYConfiguration sharedInstance] setValue:@(NO) forConfigKey:kGREYConfigKeyAnalyticsEnabled];\r\n```\r\n\r\n## For Contributors\r\n\r\nPlease make sure you’ve followed the guidelines in\r\n[CONTRIBUTING.md](./CONTRIBUTING.md) before making any contributions.\r\n\r\n### Setup EarlGrey Project\r\n\r\n  1. Clone the EarlGrey repository from Github:\r\n\r\n      ```\r\n      git clone https://github.com/google/EarlGrey.git\r\n      ```\r\n\r\n  2. Once you have the EarlGrey repository, download all the dependencies using the\r\n  `setup-earlgrey.sh` script (run the script from the cloned repo).\r\n  3. Once the script completes successfully, open `EarlGrey.xcodeproj` and ensure all\r\nthe targets build.\r\n  4. You can now use `EarlGrey.xcodeproj` to make changes to the framework.\r\n\r\n### Add and Run Tests\r\n\r\n#### Unit Tests\r\n\r\nTo add unit tests for EarlGrey use `UnitTests.xcodeproj` located at\r\n`Tests/UnitTests`. To run all unit tests, select the **UnitTests** Scheme and press Cmd+U.\r\n\r\n#### Functional Tests\r\n\r\nTo add functional tests for EarlGrey use the `FunctionalTests.xcodeproj` located\r\nat `Tests/FunctionalTests`. To run all functional tests, select the **FunctionalTests** Scheme and press Cmd+U.\r\n","google":"UA-73765225-1","note":"Don't delete this file! It's used internally to help with page regeneration."}